@model IndexVM

<style>

    #addItem{
        zoom:75%;
    }

    .modalLabel {
        border:none;
    }

    .horizontal-line {
        display: inline-block;
    }

    .hidden {
        display: none;
    }

    .first {
        display: block;
        border-bottom: 1px solid silver;
        padding-bottom: 20px;
    }

    .second {
        display: block;
        border-bottom: 1px solid silver;
        margin-top:20px;
        padding-bottom: 20px;
    }

    .third {
        display: block;
        margin-top: 20px;
    }


</style>

<div class="modal modal-xl fade" id="addItem">
    <div class="modal-dialog modal-xl">
        <div class="modal-content modal-xl">
            <div class="modal-header">
                <h4 class="modal-title" id="addItemLabel">Demirbaş Ekleme</h4>
            </div>
            <div class="modal-body">
                <form action="Create">
                    <div class="first">
                        <div class="form-group horizontal-line">
                            @Html.Label("Zimmet Tipi", new { @class = "form-control modalLabel" })
                            <select onchange="selectedvalue()" name="zimmettipi" id="zimmettipipartial" class="form-control">
                                @foreach (ZimmetTip item in Model.ZimmetTipleri)
                                {
                                    <option value="@item.ID">@item.ZimmetTipi - @item.Aciklama</option>
                                }
                            </select>
                        </div>
                        <div class="form-group horizontal-line">
                            @Html.LabelFor(x => x.Esya.Marka, new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.Marka, new { @class = "form-control" })
                        </div>
                        <div class="form-group horizontal-line">
                            @Html.Label("Takma Ad", new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.TakmaAd, new { @class = "form-control" })
                        </div>
                        <div class="form-group horizontal-line">
                            @Html.Label("Seri No", new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.SeriNo, new { @class = "form-control" })
                        </div>
                        <div class="form-group horizontal-line">
                            @Html.Label("Demirbaş No", new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.DemirbasNo, new { @minlength = "7", @maxlength = "7", @type= "number", @class = "form-control" })
                        </div>
                        <div class="form-group horizontal-line">
                            @Html.Label("Demirbaş Adı", new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.DemirbasAdi, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="second">
                        <div class="form-group  pclaptop  horizontal-line">
                            @Html.LabelFor(x => x.Esya.CPU, new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.CPU, new { @class = "form-control" })
                        </div>
                        <div class="form-group  pclaptop horizontal-line">
                            @Html.LabelFor(x => x.Esya.Ram, new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.Ram, new { @class = "form-control" })
                        </div>
                        <div class="form-group  pclaptop horizontal-line">
                            @Html.Label("Ram Slot", new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.RamSlot, new { @class = "form-control" })
                        </div>
                        <div class="form-group  pclaptop horizontal-line">
                            @Html.LabelFor(x => x.Esya.Anakart, new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.Anakart, new { @class = "form-control" })
                        </div>
                        <div class="form-group  pclaptop horizontal-line">
                            @Html.Label("Disk Tipi", new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.DiskTipi, new { @class = "form-control" })
                        </div>
                        <div class="form-group  pclaptop horizontal-line">
                            @Html.Label("Disk Kapasitesi", new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.DiskKapasitesi, new { @class = "form-control" })
                        </div>
                        <div class="form-group  laptop horizontal-line">
                            @Html.LabelFor(x => x.Esya.Ekran, new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.Ekran, new { @class = "form-control" })
                        </div>
                        <div class="form-group horizontal-line">
                            @Html.LabelFor(x => x.Esya.IP, new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.IP, new { @class = "form-control" })
                        </div>
                        <div id="maceth" class="form-group horizontal-line">
                            @Html.LabelFor(x => x.Esya.MacETH, new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.MacETH, new { @class = "form-control maceth", @maxlength = "17" })
                        </div>
                        <div class="form-group horizontal-line">
                            @Html.LabelFor(x => x.Esya.MacWiFi, new { @class = "form-control modalLabel", @maxlength="17" })
                            @Html.TextBoxFor(x => x.Esya.MacWiFi, new { @class = "form-control" })
                        </div>
                        <div class="form-group phone hidden horizontal-line">
                            @Html.LabelFor(x => x.Esya.IMEI, new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.IMEI, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="third">
                        <div class="form-group horizontal-line">
                            @Html.Label("Garanti Başlangıç Tarihi", new { @class = "form-control modalLabel" })
                            <input type="date" name="garantibaslangic" id="garantibaslangic" class="form-control" style="width:207px" min="@DateTime.Now" />
                        </div>
                        <div class="form-group horizontal-line">
                            @Html.Label("Garanti Bitiş Tarihi", new { @class = "form-control modalLabel" })
                            <input type="date" name="garantibitis" id="garantibitis" class="form-control" style="width: 207px" min="" />
                        </div>
                        <div class="form-group horizontal-line">
                            @Html.LabelFor(x => x.Esya.Bedel, new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.Bedel, new { @class = "form-control" })
                        </div>
                        <div class="form-group horizontal-line">
                            @Html.Label("Para Birimi", new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.ParaBirimi, new { @class = "form-control" })
                        </div>
                        <div class="form-group horizontal-line">
                            @Html.Label("Fatura No", new { @class = "form-control modalLabel" })
                            @Html.TextBoxFor(x => x.Esya.FaturaNo, new { @class = "form-control" })
                        </div>
                        <div class="form-group horizontal-line">
                            @Html.Label("Fatura Tarihi", new { @class = "form-control modalLabel" })
                            <input type="date" name="faturatarihi" id="faturatarihi" class="form-control" style="width: 207px" />
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button id="btnAdd" class="btn btn-primary" data-save="modal">Ekle</button>
            </div>
        </div>
    </div>
</div>

<script language="JavaScript" type="text/javascript" src="~/Scripts/jquery-3.6.0.min.js"></script>
<script language="JavaScript" type="text/javascript" src="~/Scripts/jquery-ui-1.13.2.js"></script>

<script>

    let dateInput = document.getElementById("garantibaslangic");
    dateInput.min = new Date().toISOString().slice(0, new Date().toISOString().lastIndexOf(":"));

    function selectedvalue() {

        e = document.getElementById("zimmettipipartial").value;

        const secondrowinputs = document.querySelectorAll('.second');

        const pclaptopinputs = document.querySelectorAll('.pclaptop');

        const laptopinputs = document.querySelectorAll('.laptop');

        const phoneinputs = document.querySelectorAll('.phone');

        if (e > 7) {
            secondrowinputs.forEach(second => {
                second.style.display = 'none';
            });
        }
        else {
            secondrowinputs.forEach(second => {
                second.style.display = 'block';
            });
        }

        if (e == 2 || e == 3 ) {
            pclaptopinputs.forEach(pclaptop => {
                pclaptop.style.display = 'inline-block';
            });
        }
        else {
            pclaptopinputs.forEach(pclaptop => {
                pclaptop.style.display = 'none';
            });
        }


        if (e == 3) {
            laptopinputs.forEach(laptop => {
                laptop.style.display = 'inline-block';
            })
        }
        else {
            laptopinputs.forEach(laptop => {
                laptop.style.display = 'none';
            })
        }


        if (e == 7) {
            phoneinputs.forEach(phone => {
                phone.style.display = 'inline-block';
            })
        }
        else {
            phoneinputs.forEach(phone => {
                phone.style.display = 'none';
            })
        }

    }

    $('#maceth').keypress(function (e) {
        var txt = String.fromCharCode(e.which);
        if (!txt.match(/[A-Z0-9]/)) {
            return false;
        }
    });

    $('.maceth').keypress(function () {
        var foo = $(this).val().split(":").join(""); // remove hyphens
        if (foo.length > 0) {
            foo = foo.match(new RegExp('.{1,2}', 'g')).join(":");
        }
        $(this).val(foo);
    });



</script>